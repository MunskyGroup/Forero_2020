function plot_mh_from_files(parnames, file_prefix, nchains, nsegments, par_changed, fignum)

    % Function that visualizes the parameter sensitivy plot generated by long
    % enough methaste runs.

    % parnames - char array of all parameters used in the MH search
    % file_prefix - the file prefix of the MH sample files
    % nchains - number of chains used for the MH
    % nsegments - number of segments per MH chain in the files
    % par_changed - indicies of which parameters to plot
    % fignum - number of the figure to use to plot

    figure(1)
    SPS =[];
    mh_val_all = [];

    % load in the saved chains here
    for i=1:nchains 
       
            mh_smpl{i} = [];
            mh_value{i} = [];
            sv_file = [file_prefix, num2str(i)];
            clear mh_smpl_*  mh_value_*
            tmp_dat = load(sv_file);



            for j=1:nsegments
 
                eval(['mh_smpl{i} = [mh_smpl{i};tmp_dat.mh_smpl_',num2str(j),'];']);
                eval(['mh_value{i} = [mh_value{i};tmp_dat.mh_value_',num2str(j),'];']);

            end
    % This commented section plots the autocorrelation and histogrames if wanted
    %             figure(1)
    %             subplot(4,5,i) %plot the LL histograms per chain
    %             plot(mh_value{i}); hold on
    %             set(gca,'ylim',[-30,-14])
    %             figure(2)
    %             subplot(4,5,i)
    %             histogram(mh_value{i}); hold on        
    %             set(gca,'xlim',[-30,-14])
    %             
    %             figure(3)  %plot the autocorrelation of the chains
    %             subplot(4,5,i)
    %             C = xcorr(mh_value{i}-mean(mh_value{i}),mh_value{i}-mean(mh_value{i}),'coeff');
    %             plot(C(floor(length(C)/2):end));           
    %             set(gca,'xlim',[0,10000],'ylim',[-0.1 1])
    %           
    
            %     figure(1+i)
        %     for j = 1:5
        %         subplot(2,3,j); histogram(mh_smpl{i}(:,j));
        %     end
        SPS = [SPS;mh_smpl{i}];
        mh_val_all = [mh_val_all; mh_value{i}]; 
    end

    size(SPS);
    mh_vals = mh_val_all;
    sz = 2*(1+max(mh_vals)-mh_vals);
    figure(fignum)
    xh = 2*3*6;
    yh = 2*14.3/3;
    fntsize = 18;
    fig1= gcf;
    fig1.PaperUnits = 'centimeters';
    fig1.PaperPosition = [0, 0, xh, 3*yh]; % x,y, width, height


    mh_pars = SPS(:,par_changed);
    %par_changed = [5,1,6,3,4];

    [sorted_mh_vals, mh_val_inds] = sort(mh_vals);  %sort every value for plotting based on LL
    mh_par_sort = mh_pars(mh_val_inds,:);
    colormap(flipud(parula))  %flip the colormap

    mh_val_new = -sort(mh_vals);
    mh_val_new(mh_val_new > mh_val_new(ceil(.005*(length(mh_val_new))))) = mh_val_new(ceil(.005*(length(mh_val_new)))); %set .5% threshhold

    Np = length(par_changed);
    for i=1:Np %generate the plot
        subplot(Np,Np,(i-1)*Np+i)

        H = histogram(mh_pars(:,i),20,'Normalization','Probability'); hold on;
        %H = histogram(mh_pars(:,i),20,'Normalization','Probability'); hold on;

        X =  sort(mh_pars(:,i));
        low = X(floor(length(X)/10));
        high = X(ceil(9*length(X)/10));

        plot(mh_pars(1,i)*[1,1],get(gca,'ylim'),'r--','linewidth',3)

        title([parnames{par_changed(i)}])


        if i==1
            ylabel({parnames{par_changed(i)}},'FontSize',fntsize,'FontWeight','bold');
        elseif i==Np
            xlabel({parnames{par_changed(i)}},'FontSize',fntsize,'FontWeight','bold');
        end


            set (gca ,'TickLength',[.01,.3],'LineWidth',2);
        set (gca ,'FontSize',fntsize,'FontName', 'Arial');


       for j=i+1:Np  % Plot the scatter plot along the lower diagonal
            subplot(Np,Np,(j-1)*Np+i)  %scatter with colors based on LL, thin by 100
             scatter(mh_par_sort(1:100:end,i),mh_par_sort(1:100:end,j),sz(1:100:end),mh_val_new(1:100:end),'filled','MarkerFaceAlpha',.2,'MarkerEdgeAlpha',.2); hold on

            plot(mh_pars(1,i),mh_pars(1,j),'ko','markersize',8,'markerfacecolor','k')
            if i==1
                ylabel({parnames{par_changed(j)}},'FontSize',fntsize,'FontWeight','bold');


            end
            if j==Np
                xlabel({parnames{par_changed(i)}} ,'FontSize',fntsize,'FontWeight','bold');
            end
            set (gca ,'TickLength',[.01,.3],'LineWidth',2);
            set (gca ,'FontSize',fntsize,'FontName', 'Arial');
       end

    end
       subplot(5,5,2)  % add extra plot for colorbar
       scatter(mh_par_sort(1:100:end,1),mh_par_sort(1:100:end,2),sz(1:100:end),mh_val_new(1:100:end),'filled','MarkerFaceAlpha',.2,'MarkerEdgeAlpha',.2); hold on
       colorbar
